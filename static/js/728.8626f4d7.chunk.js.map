{"version":3,"file":"static/js/728.8626f4d7.chunk.js","mappings":"yPACA,EAAuB,qBAAvB,EAAoD,sBAApD,EAAmF,uBAAnF,EAAsH,0B,SCKvG,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAUD,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMC,SAVW,SAAAC,GACnBA,EAAEC,iBACFhB,GAASiB,EAAAA,EAAAA,IAAc,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACtCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAIiCU,aAAa,MAAMN,UAAWC,EAA5D,WACE,SAACM,EAAA,EAAD,CACEC,GAAG,sBACHC,MAAM,OACNC,KAAK,OACLnB,KAAK,OACLQ,MAAOR,EACPe,aAAa,eACbK,SAAUd,EACVG,UAAWC,KAEb,SAACM,EAAA,EAAD,CACEC,GAAG,uBACHC,MAAM,QACNC,KAAK,QACLnB,KAAK,QACLQ,MAAON,EACPa,aAAa,gBACbK,SAAUd,EACVG,UAAWC,KAEb,SAACM,EAAA,EAAD,CACEC,GAAG,0BACHC,MAAM,WACNC,KAAK,WACLnB,KAAK,WACLQ,MAAOJ,EACPW,aAAa,mBACbK,SAAUd,EACVG,UAAWC,KAEb,SAACW,EAAA,EAAD,CACEF,KAAK,SACLG,QAAQ,YACRC,MAAM,UACNd,UAAWC,EAJb,yBAWP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/SignUp/SignUp.module.css?4294","pages/SignUp/SignUp.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignUp_form__RcCc3\",\"input\":\"SignUp_input__Z-lwz\",\"button\":\"SignUp_button__f0wIa\",\"container\":\"SignUp_container__iie1G\"};","import React, { useState } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { registerThunk } from 'redux/auth/thunks';\nimport css from './SignUp.module.css';\n\nexport default function SignUp() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(registerThunk({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className={css.container}>\n      <form onSubmit={handleSubmit} autoComplete=\"off\" className={css.form}>\n        <TextField\n          id=\"outlined-name-input\"\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          autoComplete=\"current-name\"\n          onChange={handleChange}\n          className={css.input}\n        />\n        <TextField\n          id=\"outlined-email-input\"\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          autoComplete=\"current-email\"\n          onChange={handleChange}\n          className={css.input}\n        />\n        <TextField\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          autoComplete=\"current-password\"\n          onChange={handleChange}\n          className={css.input}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={css.button}\n        >\n          Sign Up\n        </Button>\n      </form>\n    </div>\n  );\n}"],"names":["SignUp","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","className","css","onSubmit","e","preventDefault","registerThunk","autoComplete","TextField","id","label","type","onChange","Button","variant","color"],"sourceRoot":""}